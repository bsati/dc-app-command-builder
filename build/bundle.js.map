{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/highlight.js/lib/core.js","../../node_modules/svelte-highlight/Highlight.svelte","../../node_modules/svelte-highlight/languages/json.js","../../node_modules/highlight.js/es/languages/json.js","../../node_modules/svelte-highlight/styles/atom-one-dark.js","../../src/models/app_command.ts","../../src/util/enum_util.ts","../../src/components/base/Checkbox.svelte","../../src/components/Icon.svelte","../../src/components/base/Collapsible.svelte","../../src/components/base/Select.svelte","../../src/components/base/Textbox.svelte","../../src/components/CommandOptionChoice.svelte","../../src/components/Localization.svelte","../../src/components/CommandOption.svelte","../../src/components/Command.svelte","../../src/components/CommandList.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\nvar deepFreeze$1 = deepFreezeEs6.exports;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst expandScopeName = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let scope = node.kind;\n    if (node.sublanguage) {\n      scope = `language-${scope}`;\n    } else {\n      scope = expandScopeName(scope, { prefix: this.classPrefix });\n    }\n    this.span(scope);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type KeywordDict */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.5.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substr(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze$1(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n","<script>\n  /** @type {{ name?: string; register: (hljs: any) => Record<string, any>; }} */\n  export let language = { name: undefined, register: undefined };\n\n  /**\n   * Source code to highlight\n   * @type {string}\n   */\n  export let code = undefined;\n\n  /**\n   * Add a language tag to the top-right\n   * of the code block\n   * @type {boolean}\n   */\n  export let langtag = false;\n\n  import hljs from \"highlight.js/lib/core\";\n  import { createEventDispatcher, afterUpdate } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  let highlighted = undefined;\n\n  afterUpdate(() => {\n    if (highlighted) dispatch(\"highlight\", { highlighted });\n  });\n\n  $: if (language.name && language.register) {\n    hljs.registerLanguage(language.name, language.register);\n    highlighted = hljs.highlight(code, { language: language.name }).value;\n  }\n</script>\n\n<slot {highlighted}>\n  <!-- prettier-ignore -->\n  <pre\n    class:langtag\n    data-language={(language.name && language.name) || \"plaintext\"}\n    {...$$restProps}><code class=\"hljs\">{#if highlighted !== undefined}{@html highlighted}{:else}{code}{/if}</code></pre>\n</slot>\n\n<style>\n  pre.langtag {\n    position: relative;\n  }\n\n  pre.langtag::after {\n    content: attr(data-language);\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 1em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: inherit;\n    color: inherit;\n    background: var(--hljs-background);\n    color: var(--hljs-foreground);\n    border-radius: var(--hljs-radius);\n  }\n</style>\n","import register from \"highlight.js/lib/languages/json\";\n\nexport const json = { name: \"json\", register };\nexport default json;\n","/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  // normally we would rely on `keywords` for this but using a mode here allows us\n  // to use the very tight `illegal: \\S` rule later to flag any other character\n  // as illegal indicating that despite looking like JSON we do not truly have\n  // JSON and thus improve false-positively greatly since JSON will try and claim\n  // all sorts of JSON looking stuff\n  const LITERALS = { beginKeywords: [\n    \"true\",\n    \"false\",\n    \"null\"\n  ].join(\" \") };\n\n  return {\n    name: 'JSON',\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport { json as default };\n","const atomOneDark = `<style>pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{color:#abb2bf;background:#282c34}.hljs-comment,.hljs-quote{color:#5c6370;font-style:italic}.hljs-doctag,.hljs-formula,.hljs-keyword{color:#c678dd}.hljs-deletion,.hljs-name,.hljs-section,.hljs-selector-tag,.hljs-subst{color:#e06c75}.hljs-literal{color:#56b6c2}.hljs-addition,.hljs-attribute,.hljs-meta .hljs-string,.hljs-regexp,.hljs-string{color:#98c379}.hljs-attr,.hljs-number,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-pseudo,.hljs-template-variable,.hljs-type,.hljs-variable{color:#d19a66}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-symbol,.hljs-title{color:#61aeee}.hljs-built_in,.hljs-class .hljs-title,.hljs-title.class_{color:#e6c07b}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}.hljs-link{text-decoration:underline}</style>`;\n\nexport default atomOneDark;\n","export var ApplicationCommandOptionType;\r\n(function (ApplicationCommandOptionType) {\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"SUB_COMMAND\"] = 1] = \"SUB_COMMAND\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"SUB_COMMAND_GROUP\"] = 2] = \"SUB_COMMAND_GROUP\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"STRING\"] = 3] = \"STRING\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"INTEGER\"] = 4] = \"INTEGER\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"BOOLEAN\"] = 5] = \"BOOLEAN\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"USER\"] = 6] = \"USER\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"CHANNEL\"] = 7] = \"CHANNEL\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"ROLE\"] = 8] = \"ROLE\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"MENTIONABLE\"] = 9] = \"MENTIONABLE\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"NUMBER\"] = 10] = \"NUMBER\";\r\n    ApplicationCommandOptionType[ApplicationCommandOptionType[\"ATTACHMENT\"] = 11] = \"ATTACHMENT\";\r\n})(ApplicationCommandOptionType || (ApplicationCommandOptionType = {}));\r\nexport var ChannelType;\r\n(function (ChannelType) {\r\n    ChannelType[ChannelType[\"GUILD_TEXT\"] = 0] = \"GUILD_TEXT\";\r\n    ChannelType[ChannelType[\"DM\"] = 1] = \"DM\";\r\n    ChannelType[ChannelType[\"GUILD_VOICE\"] = 2] = \"GUILD_VOICE\";\r\n    ChannelType[ChannelType[\"GROUP_DM\"] = 3] = \"GROUP_DM\";\r\n    ChannelType[ChannelType[\"GUILD_CATEGORY\"] = 4] = \"GUILD_CATEGORY\";\r\n    ChannelType[ChannelType[\"GUILD_NEWS\"] = 5] = \"GUILD_NEWS\";\r\n    ChannelType[ChannelType[\"GUILD_NEWS_THREAD\"] = 10] = \"GUILD_NEWS_THREAD\";\r\n    ChannelType[ChannelType[\"GUILD_PUBLIC_THREAD\"] = 11] = \"GUILD_PUBLIC_THREAD\";\r\n    ChannelType[ChannelType[\"GUILD_PRIVATE_THREAD\"] = 12] = \"GUILD_PRIVATE_THREAD\";\r\n    ChannelType[ChannelType[\"GUILD_STAGE_VOICE\"] = 13] = \"GUILD_STAGE_VOICE\";\r\n    ChannelType[ChannelType[\"GUILD_DIRECTORY\"] = 14] = \"GUILD_DIRECTORY\";\r\n    ChannelType[ChannelType[\"GUILD_FORUM\"] = 15] = \"GUILD_FORUM\";\r\n})(ChannelType || (ChannelType = {}));\r\nexport var Locale;\r\n(function (Locale) {\r\n    Locale[\"Danish\"] = \"da\";\r\n    Locale[\"German\"] = \"de\";\r\n    Locale[\"English_UK\"] = \"en-GB\";\r\n    Locale[\"English_US\"] = \"en-US\";\r\n    Locale[\"Spanish\"] = \"es-ES\";\r\n    Locale[\"French\"] = \"fr\";\r\n    Locale[\"Croatian\"] = \"hr\";\r\n    Locale[\"Italian\"] = \"it\";\r\n    Locale[\"Lithuanian\"] = \"lt\";\r\n    Locale[\"Hungarian\"] = \"hu\";\r\n    Locale[\"Dutch\"] = \"nl\";\r\n    Locale[\"Norwegian\"] = \"no\";\r\n    Locale[\"Polish\"] = \"pl\";\r\n    Locale[\"Portuguese_Brazilian\"] = \"pt-BR\";\r\n    Locale[\"Romanian\"] = \"ro\";\r\n    Locale[\"Finnish\"] = \"fi\";\r\n    Locale[\"Swedish\"] = \"sv-SE\";\r\n    Locale[\"Vietnamese\"] = \"vi\";\r\n    Locale[\"Turkish\"] = \"tr\";\r\n    Locale[\"Czech\"] = \"cs\";\r\n    Locale[\"Greek\"] = \"el\";\r\n    Locale[\"Bulgarian\"] = \"bg\";\r\n    Locale[\"Russian\"] = \"ru\";\r\n    Locale[\"Ukrainian\"] = \"uk\";\r\n    Locale[\"Hindi\"] = \"hi\";\r\n    Locale[\"Thai\"] = \"th\";\r\n    Locale[\"Chinese_China\"] = \"zh-CN\";\r\n    Locale[\"Japanese\"] = \"ja\";\r\n    Locale[\"Chinese_Taiwan\"] = \"zh-TW\";\r\n    Locale[\"Korean\"] = \"ko\";\r\n})(Locale || (Locale = {}));\r\nexport var ApplicationCommandType;\r\n(function (ApplicationCommandType) {\r\n    ApplicationCommandType[ApplicationCommandType[\"CHAT_INPUT\"] = 1] = \"CHAT_INPUT\";\r\n    ApplicationCommandType[ApplicationCommandType[\"USER\"] = 2] = \"USER\";\r\n    ApplicationCommandType[ApplicationCommandType[\"MESSAGE\"] = 3] = \"MESSAGE\";\r\n})(ApplicationCommandType || (ApplicationCommandType = {}));\r\nexport function build_permissions(permissions) {\r\n    if (permissions.length == 0) {\r\n        return undefined;\r\n    }\r\n    let result = 0;\r\n    for (let permission of permissions) {\r\n        result |= permission;\r\n    }\r\n    return result.toString();\r\n}\r\nexport var Permission;\r\n(function (Permission) {\r\n    Permission[Permission[\"CREATE_INSTANT_INVITE\"] = 1] = \"CREATE_INSTANT_INVITE\";\r\n    Permission[Permission[\"KICK_MEMBERS\"] = 2] = \"KICK_MEMBERS\";\r\n    Permission[Permission[\"BAN_MEMBERS\"] = 4] = \"BAN_MEMBERS\";\r\n    Permission[Permission[\"ADMINISTRATOR\"] = 8] = \"ADMINISTRATOR\";\r\n    Permission[Permission[\"MANAGE_CHANNELS\"] = 16] = \"MANAGE_CHANNELS\";\r\n    Permission[Permission[\"MANAGE_GUILD\"] = 32] = \"MANAGE_GUILD\";\r\n    Permission[Permission[\"ADD_REACTIONS\"] = 64] = \"ADD_REACTIONS\";\r\n    Permission[Permission[\"VIEW_AUDIT_LOG\"] = 128] = \"VIEW_AUDIT_LOG\";\r\n    Permission[Permission[\"PRIORITY_SPEAKER\"] = 256] = \"PRIORITY_SPEAKER\";\r\n    Permission[Permission[\"STREAM\"] = 512] = \"STREAM\";\r\n    Permission[Permission[\"VIEW_CHANNEL\"] = 1024] = \"VIEW_CHANNEL\";\r\n    Permission[Permission[\"SEND_MESSAGES\"] = 2048] = \"SEND_MESSAGES\";\r\n    Permission[Permission[\"SEND_TTS_MESSAGES\"] = 4096] = \"SEND_TTS_MESSAGES\";\r\n    Permission[Permission[\"MANAGE_MESSAGES\"] = 8192] = \"MANAGE_MESSAGES\";\r\n    Permission[Permission[\"EMBED_LINKS\"] = 16384] = \"EMBED_LINKS\";\r\n    Permission[Permission[\"ATTACH_FILES\"] = 32768] = \"ATTACH_FILES\";\r\n    Permission[Permission[\"READ_MESSAGE_HISTORY\"] = 65536] = \"READ_MESSAGE_HISTORY\";\r\n    Permission[Permission[\"MENTION_EVERYONE\"] = 131072] = \"MENTION_EVERYONE\";\r\n    Permission[Permission[\"USE_EXTERNAL_EMOJIS\"] = 262144] = \"USE_EXTERNAL_EMOJIS\";\r\n    Permission[Permission[\"VIEW_GUILD_INSIGHTS\"] = 524288] = \"VIEW_GUILD_INSIGHTS\";\r\n    Permission[Permission[\"CONNECT\"] = 1048576] = \"CONNECT\";\r\n    Permission[Permission[\"SPEAK\"] = 2097152] = \"SPEAK\";\r\n    Permission[Permission[\"MUTE_MEMBERS\"] = 4194304] = \"MUTE_MEMBERS\";\r\n    Permission[Permission[\"DEAFEN_MEMBERS\"] = 8388608] = \"DEAFEN_MEMBERS\";\r\n    Permission[Permission[\"MOVE_MEMBERS\"] = 16777216] = \"MOVE_MEMBERS\";\r\n    Permission[Permission[\"USE_VAD\"] = 33554432] = \"USE_VAD\";\r\n    Permission[Permission[\"CHANGE_NICKNAME\"] = 67108864] = \"CHANGE_NICKNAME\";\r\n    Permission[Permission[\"MANAGE_NICKNAMES\"] = 134217728] = \"MANAGE_NICKNAMES\";\r\n    Permission[Permission[\"MANAGE_ROLES\"] = 268435456] = \"MANAGE_ROLES\";\r\n    Permission[Permission[\"MANAGE_WEBHOOKS\"] = 536870912] = \"MANAGE_WEBHOOKS\";\r\n    Permission[Permission[\"MANAGE_EMOJIS_AND_STICKERS\"] = 1073741824] = \"MANAGE_EMOJIS_AND_STICKERS\";\r\n    Permission[Permission[\"USE_APPLICATION_COMMANDS\"] = -2147483648] = \"USE_APPLICATION_COMMANDS\";\r\n    Permission[Permission[\"REQUEST_TO_SPEAK\"] = 1] = \"REQUEST_TO_SPEAK\";\r\n    Permission[Permission[\"MANAGE_EVENTS\"] = 2] = \"MANAGE_EVENTS\";\r\n    Permission[Permission[\"MANAGE_THREADS\"] = 4] = \"MANAGE_THREADS\";\r\n    Permission[Permission[\"CREATE_PUBLIC_THREADS\"] = 8] = \"CREATE_PUBLIC_THREADS\";\r\n    Permission[Permission[\"CREATE_PRIVATE_THREADS\"] = 16] = \"CREATE_PRIVATE_THREADS\";\r\n    Permission[Permission[\"USE_EXTERNAL_STICKERS\"] = 32] = \"USE_EXTERNAL_STICKERS\";\r\n    Permission[Permission[\"SEND_MESSAGES_IN_THREADS\"] = 64] = \"SEND_MESSAGES_IN_THREADS\";\r\n    Permission[Permission[\"USE_EMBEDDED_ACTIVITIES\"] = 128] = \"USE_EMBEDDED_ACTIVITIES\";\r\n    Permission[Permission[\"MODERATE_MEMBERS\"] = 256] = \"MODERATE_MEMBERS\";\r\n})(Permission || (Permission = {}));\r\n","export function buildOptionsFromEnum(enumType) {\r\n    let options = [];\r\n    const entries = Object.entries(enumType);\r\n    entries.splice(0, entries.length / 2);\r\n    for (let entry of entries) {\r\n        let display = entry[0].toLowerCase();\r\n        const split = display.split(\"_\");\r\n        display = split\r\n            .map((str) => str[0].toUpperCase() + str.slice(1))\r\n            .join(\" \");\r\n        options.push({\r\n            display: display,\r\n            value: entry[1],\r\n        });\r\n    }\r\n    return options;\r\n}\r\n","<script lang=\"ts\">\r\n    export let label: string;\r\n    export let value: boolean | undefined;\r\n    export let name = label;\r\n</script>\r\n\r\n<div class=\"checkbox\">\r\n    <label for={name} class=\"input-label\">{label}</label>\r\n    <input type=\"checkbox\" bind:checked={value} {name} />\r\n</div>\r\n\r\n<style>\r\n    .input-label {\r\n        display: inline-block;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let name: string;\r\n\r\n    interface Icon {\r\n        svg: string;\r\n    }\r\n\r\n    let icons = new Map<string, Icon>();\r\n    icons.set(\"add\", {\r\n        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" /></svg>',\r\n    });\r\n    icons.set(\"copy\", {\r\n        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" /></svg>',\r\n    });\r\n    icons.set(\"chevron_down\", {\r\n        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19 9l-7 7-7-7\" /></svg>',\r\n    });\r\n    icons.set(\"chevron_right\", {\r\n        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 5l7 7-7 7\" /></svg>',\r\n    });\r\n    icons.set(\"delete\", {\r\n        svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" /></svg>',\r\n    });\r\n    $: icon = icons.get(name);\r\n</script>\r\n\r\n{#if icon}\r\n    <i class={$$props.class}>\r\n        {@html icon.svg}\r\n    </i>\r\n{/if}\r\n","<script lang=\"ts\">\r\n    import Icon from \"../Icon.svelte\";\r\n\r\n    export let collapsed = false;\r\n\r\n    $: icon = collapsed ? \"chevron_right\" : \"chevron_down\";\r\n</script>\r\n\r\n<div class=\"collapsible\">\r\n    <div\r\n        class=\"collapsible-header\"\r\n        on:click={() => (collapsed = !collapsed)}\r\n        class:collapsed-header={collapsed}\r\n    >\r\n        <Icon name={icon} class=\"collapse-icon\" />\r\n        <slot name=\"header\" />\r\n    </div>\r\n    {#if !collapsed}\r\n        <slot name=\"content\" />\r\n    {/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    :global(.collapse-icon) {\r\n        display: inline-block;\r\n        width: 20px;\r\n        padding-top: 2px;\r\n        margin-right: 0.3em;\r\n    }\r\n    .collapsible-header {\r\n        cursor: pointer;\r\n        padding: 0 0.5em 0 0.5em;\r\n        border-top-left-radius: 0.5em;\r\n        border-top-right-radius: 0.5em;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: row;\r\n\r\n        &:hover {\r\n            background: rgba(255, 255, 255, 0.05);\r\n        }\r\n    }\r\n\r\n    .collapsed-header {\r\n        border-bottom-left-radius: 0.5em;\r\n        border-bottom-right-radius: 0.5em;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import Icon from \"../Icon.svelte\";\r\n\r\n    interface SelectValue {\r\n        display: string;\r\n        value: any;\r\n    }\r\n\r\n    export let label: string | undefined = undefined;\r\n    export let options: SelectValue[];\r\n    export let currentIndex = -1;\r\n    export let selectionMode: \"single\" | \"multiple\" = \"single\";\r\n    export let currentIndices: number[] = [];\r\n    const defaultText = \"Select...\";\r\n    let formattedText = defaultText;\r\n    $: {\r\n        if (selectionMode === \"single\" && currentIndex >= 0) {\r\n            formattedText = options[currentIndex].display;\r\n        } else if (selectionMode === \"multiple\" && currentIndices.length > 0) {\r\n            formattedText = options\r\n                .filter(\r\n                    (_val, idx, _arr) =>\r\n                        currentIndices.findIndex((x) => x === idx) !== -1\r\n                )\r\n                .map((x) => x.display)\r\n                .join(\", \");\r\n        } else {\r\n            formattedText = defaultText;\r\n        }\r\n    }\r\n\r\n    let opened = false;\r\n\r\n    let selectElement: HTMLElement;\r\n    let optionsElements: HTMLElement;\r\n\r\n    function handleWindowClick(event) {\r\n        if (\r\n            event.target.parentNode != selectElement &&\r\n            event.target.parentNode != optionsElements &&\r\n            opened\r\n        ) {\r\n            opened = false;\r\n        }\r\n    }\r\n\r\n    function handleSelection(i: number) {\r\n        if (selectionMode === \"multiple\") {\r\n            const index = currentIndices.findIndex((x) => x === i);\r\n            if (index === -1) {\r\n                currentIndices = [...currentIndices, i];\r\n            } else {\r\n                currentIndices.splice(index, 1);\r\n                currentIndices = currentIndices;\r\n            }\r\n            dispatch(\"selectionChanged\", {\r\n                values: options.filter(\r\n                    (_val, idx, _arr) =>\r\n                        currentIndices.findIndex((x) => x === idx) !== -1\r\n                ),\r\n            });\r\n        } else {\r\n            currentIndex = i;\r\n            dispatch(\"selectionChanged\", {\r\n                newValue: options[i],\r\n            });\r\n        }\r\n    }\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<svelte:window on:mousedown={handleWindowClick} />\r\n\r\n<div\r\n    class=\"select\"\r\n    class:unlabeled={label == undefined}\r\n    bind:this={selectElement}\r\n>\r\n    {#if label != undefined}\r\n        <span class=\"input-label\">{label}</span>\r\n    {/if}\r\n    <div class=\"select-input\" on:click={() => (opened = !opened)}>\r\n        {formattedText}\r\n        <Icon name=\"chevron_down\" class=\"select-chevron\" />\r\n        {#if opened}\r\n            <div class=\"select-options\" bind:this={optionsElements}>\r\n                {#each options as option, i}\r\n                    <div class=\"option\" on:click={() => handleSelection(i)}>\r\n                        {option.display}\r\n                    </div>\r\n                {/each}\r\n            </div>\r\n        {/if}\r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .select-input {\r\n        background: var(--background-color-brighter);\r\n        padding: 0.8em;\r\n        color: var(--input-text-color);\r\n        border-radius: 0.5em;\r\n        margin: 0.3em 0;\r\n        border: 2px solid var(--input-border);\r\n        font-size: 10pt;\r\n        position: relative;\r\n\r\n        :global(.select-chevron) {\r\n            position: absolute;\r\n            width: 20px;\r\n            right: 0.5em;\r\n            color: var(--input-text-color);\r\n        }\r\n    }\r\n    .select-options {\r\n        position: absolute;\r\n        top: 3.15em;\r\n        left: 0;\r\n        background: var(--background-color-brighter);\r\n        z-index: 1;\r\n        border-radius: 0.5em;\r\n        width: 100%;\r\n        max-height: 13em;\r\n        overflow-y: scroll;\r\n\r\n        .option {\r\n            width: calc(100% - 1em);\r\n            padding: 1em 0.5em;\r\n            cursor: pointer;\r\n\r\n            &:first-child {\r\n                border-top-left-radius: 0.5em;\r\n                border-top-right-radius: 0.5em;\r\n            }\r\n\r\n            &:last-child {\r\n                border-bottom-left-radius: 0.5em;\r\n                border-bottom-right-radius: 0.5em;\r\n            }\r\n\r\n            &:hover {\r\n                background: rgb(255, 255, 255, 0.05);\r\n            }\r\n        }\r\n    }\r\n\r\n    .input-label {\r\n        display: inline-block;\r\n    }\r\n\r\n    .select:not(.unlabeled) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 8fr;\r\n        gap: 0.5em;\r\n        align-items: center;\r\n    }\r\n\r\n    .select.unlabeled {\r\n        display: flex;\r\n\r\n        .select-input {\r\n            width: 100%;\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let label: string | undefined = undefined;\r\n    export let value: string | number;\r\n    export let html_input_type: \"text\" | \"password\" = \"text\";\r\n    export let input_type: \"integer\" | \"float\" | undefined = undefined;\r\n    export let name = label;\r\n    export let maxlength = -1;\r\n\r\n    function handleInput(event) {\r\n        const val = (event.target as HTMLInputElement).value;\r\n        if (input_type === \"integer\") {\r\n            value = parseInt(val);\r\n        } else if (input_type === \"float\") {\r\n            value = parseFloat(val);\r\n        } else {\r\n            value = val;\r\n        }\r\n    }\r\n</script>\r\n\r\n<div class=\"input-group\" class:unlabeled={label == undefined}>\r\n    {#if label != undefined}\r\n        <label class=\"input-label\" for={name}>{label}</label>\r\n    {/if}\r\n    <input\r\n        type={html_input_type}\r\n        value={value ? value : \"\"}\r\n        on:input={handleInput}\r\n        {name}\r\n        {maxlength}\r\n    />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .input-group:not(.unlabeled) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 8fr;\r\n        gap: 0.5em;\r\n        align-items: center;\r\n    }\r\n\r\n    .input-group.unlabeled {\r\n        display: flex;\r\n\r\n        input {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    input {\r\n        background: var(--background-color-brighter);\r\n        padding: 0.8em;\r\n        color: var(--input-text-color);\r\n        border-radius: 0.5em;\r\n        margin: 0.3em 0;\r\n        border: 2px solid var(--input-border);\r\n\r\n        &:focus,\r\n        &:focus-visible {\r\n            outline: 0;\r\n            border-color: var(--primary-color);\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import {\r\n        ApplicationCommandOptionChoice,\r\n        ApplicationCommandOptionType,\r\n    } from \"../models/app_command\";\r\n    import Textbox from \"./base/Textbox.svelte\";\r\n    import Icon from \"./Icon.svelte\";\r\n    export let choice: Partial<ApplicationCommandOptionChoice>;\r\n    export let optionType: ApplicationCommandOptionType;\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let input_type: \"integer\" | \"float\" | undefined;\r\n    $: switch (optionType) {\r\n        case ApplicationCommandOptionType.STRING:\r\n            input_type = undefined;\r\n            break;\r\n        case ApplicationCommandOptionType.INTEGER:\r\n            input_type = \"integer\";\r\n            break;\r\n        case ApplicationCommandOptionType.NUMBER:\r\n            input_type = \"float\";\r\n    }\r\n</script>\r\n\r\n<div class=\"command-choice-container\">\r\n    <div class=\"container-header\">\r\n        <h4 class=\"heading\">Choice</h4>\r\n        <div class=\"delete-icon-wrapper\" on:click={() => dispatch(\"remove\")}>\r\n            <Icon name=\"delete\" class=\"delete-icon\" />\r\n        </div>\r\n    </div>\r\n    <Textbox label=\"Name\" bind:value={choice.name} />\r\n    <Textbox label=\"Value\" bind:value={choice.value} {input_type} />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .command-choice-container {\r\n        padding: 0 0.5em 0.5em 0.5em;\r\n        box-shadow: 0px 0px 5px 0px var(--box-shadow);\r\n        border-radius: 0.5em;\r\n        min-width: 5em;\r\n        position: relative;\r\n\r\n        :global(.delete-icon) {\r\n            right: 0;\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { Locale, Localization } from \"../models/app_command\";\r\n    import Select from \"./base/Select.svelte\";\r\n    import Textbox from \"./base/Textbox.svelte\";\r\n    import Icon from \"./Icon.svelte\";\r\n\r\n    export let localizations: Localization;\r\n    let keys: string[];\r\n    $: if (localizations) {\r\n        keys = Object.keys(localizations);\r\n    }\r\n\r\n    const locales = [];\r\n    const locale_keys = [];\r\n    const entries = Object.entries(Locale);\r\n    entries.splice(0, entries.length / 2);\r\n    for (let commandType of entries) {\r\n        locale_keys.push(commandType[1]);\r\n        let display = commandType[0].toLowerCase();\r\n        const split = display.split(\"_\");\r\n        display = split\r\n            .map((str) => str[0].toUpperCase() + str.slice(1))\r\n            .join(\" \");\r\n        locales.push({\r\n            display: display,\r\n            value: commandType[1],\r\n        });\r\n    }\r\n\r\n    function addLocale() {\r\n        if (!localizations) {\r\n            localizations = {};\r\n        }\r\n        const index = keys ? keys.length : 0;\r\n        localizations[locales[index].value] = \"\";\r\n    }\r\n\r\n    function selectionChanged(event, locale: string) {\r\n        localizations = Object.fromEntries(\r\n            Object.entries(localizations).map(([key, value]) => {\r\n                if (key === locale) {\r\n                    return [event.detail.newValue.value, value];\r\n                }\r\n                return [key, value];\r\n            })\r\n        );\r\n    }\r\n\r\n    function deleteLocale(locale: string) {\r\n        localizations = Object.fromEntries(\r\n            Object.entries(localizations).filter(([key, _]) => key !== locale)\r\n        );\r\n    }\r\n</script>\r\n\r\n<div class=\"localization-input\">\r\n    <span class=\"label\">Localization</span>\r\n    <div class=\"localizations\">\r\n        {#if keys}\r\n            {#each keys as locale}\r\n                <div class=\"locale\">\r\n                    <Select\r\n                        options={locales}\r\n                        currentIndex={locale_keys.findIndex(\r\n                            (l) => l === locale\r\n                        )}\r\n                        on:selectionChanged={(event) =>\r\n                            selectionChanged(event, locale)}\r\n                    />\r\n                    <Textbox value={localizations[locale]} />\r\n                    <div\r\n                        class=\"delete-locale\"\r\n                        on:click={() => deleteLocale(locale)}\r\n                    >\r\n                        <Icon name=\"delete\" class=\"btn-icon\" />\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n        {/if}\r\n        <button class=\"btn-text\" on:click={addLocale}\r\n            ><Icon name=\"add\" class=\"btn-icon\" />Add Localization</button\r\n        >\r\n    </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .localization-input {\r\n        display: grid;\r\n        gap: 0.5em;\r\n        grid-template-columns: 1fr 8fr;\r\n\r\n        .label {\r\n            margin: 0.5em 0 0.3em 0;\r\n            display: block;\r\n        }\r\n\r\n        .locale {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 0.05fr;\r\n            gap: 0.5em;\r\n            align-items: center;\r\n        }\r\n    }\r\n\r\n    .delete-locale {\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import {\r\n        ApplicationCommandOption,\r\n        ApplicationCommandOptionType,\r\n        ChannelType,\r\n    } from \"../models/app_command\";\r\n    import { buildOptionsFromEnum } from \"../util/enum_util\";\r\n    import Checkbox from \"./base/Checkbox.svelte\";\r\n    import Collapsible from \"./base/Collapsible.svelte\";\r\n    import Select from \"./base/Select.svelte\";\r\n    import Textbox from \"./base/Textbox.svelte\";\r\n    import CommandOptionChoice from \"./CommandOptionChoice.svelte\";\r\n    import Icon from \"./Icon.svelte\";\r\n    import Localization from \"./Localization.svelte\";\r\n\r\n    export let option: Partial<ApplicationCommandOption>;\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    function addOption() {\r\n        if (!option.options) {\r\n            option.options = [];\r\n        }\r\n        option.options = [...option.options, { name: \"\", description: \"\" }];\r\n    }\r\n\r\n    function addOptionChoice() {\r\n        if (!option.choices) {\r\n            option.choices = [];\r\n        }\r\n        option.choices = [...option.choices, { name: \"\", value: \"\" }];\r\n    }\r\n\r\n    function cleanUpOption(opt: Partial<ApplicationCommandOption>) {\r\n        if (\r\n            opt.options != undefined &&\r\n            opt.type !== ApplicationCommandOptionType.SUB_COMMAND &&\r\n            opt.type !== ApplicationCommandOptionType.SUB_COMMAND_GROUP\r\n        ) {\r\n            opt.options = undefined;\r\n        }\r\n        if (\r\n            (opt.max_value != undefined || option.min_value != undefined) &&\r\n            opt.type !== ApplicationCommandOptionType.INTEGER &&\r\n            opt.type !== ApplicationCommandOptionType.NUMBER\r\n        ) {\r\n            opt.max_value = undefined;\r\n            opt.min_value = undefined;\r\n        }\r\n        if (\r\n            opt.autocomplete != undefined &&\r\n            opt.type !== ApplicationCommandOptionType.NUMBER &&\r\n            opt.type !== ApplicationCommandOptionType.INTEGER &&\r\n            opt.type !== ApplicationCommandOptionType.STRING\r\n        ) {\r\n            opt.autocomplete = undefined;\r\n        }\r\n        if (\r\n            opt.choices != undefined &&\r\n            opt.type !== ApplicationCommandOptionType.NUMBER &&\r\n            opt.type !== ApplicationCommandOptionType.INTEGER &&\r\n            opt.type !== ApplicationCommandOptionType.STRING\r\n        ) {\r\n            opt.choices = undefined;\r\n        }\r\n        if (\r\n            opt.channel_types != undefined &&\r\n            opt.type !== ApplicationCommandOptionType.CHANNEL\r\n        ) {\r\n            opt.channel_types = undefined;\r\n        }\r\n    }\r\n\r\n    let commandOptionTypes = buildOptionsFromEnum(ApplicationCommandOptionType);\r\n\r\n    let channelTypes = buildOptionsFromEnum(ChannelType);\r\n\r\n    let defaultOptionType = 2;\r\n    $: option.type = commandOptionTypes[defaultOptionType].value;\r\n    $: cleanUpOption(option);\r\n\r\n    function handleChannelTypeSelectionChanged(event) {\r\n        option.channel_types = event.detail.values.map((x) => x.value);\r\n    }\r\n</script>\r\n\r\n<div class=\"command-option-container\">\r\n    <Collapsible>\r\n        <div class=\"container-header\" slot=\"header\">\r\n            <h3 class=\"heading\">Option</h3>\r\n            <div\r\n                class=\"delete-icon-wrapper\"\r\n                on:click={() => dispatch(\"remove\")}\r\n            >\r\n                <Icon name=\"delete\" class=\"delete-icon\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"content\" slot=\"content\">\r\n            <div class=\"command-option-info\">\r\n                <Textbox label=\"Name\" bind:value={option.name} maxlength={32} />\r\n                <Localization bind:localizations={option.name_localizations} />\r\n                <Textbox\r\n                    label=\"Description\"\r\n                    bind:value={option.description}\r\n                    maxlength={100}\r\n                />\r\n                <Localization\r\n                    bind:localizations={option.description_localizations}\r\n                />\r\n                <Checkbox label=\"Required\" bind:value={option.required} />\r\n                <Select\r\n                    label=\"Type\"\r\n                    options={commandOptionTypes}\r\n                    bind:currentIndex={defaultOptionType}\r\n                />\r\n            </div>\r\n            {#if option.type === ApplicationCommandOptionType.SUB_COMMAND || option.type === ApplicationCommandOptionType.SUB_COMMAND_GROUP}\r\n                {#if option.options}\r\n                    {#each option.options as child_option, i}\r\n                        <svelte:self\r\n                            option={child_option}\r\n                            on:remove={() => {\r\n                                option.options.splice(i, 1);\r\n                                option.options = option.options;\r\n                            }}\r\n                        />\r\n                    {/each}\r\n                {/if}\r\n                <div class=\"button-bar\">\r\n                    <button on:click={addOption}>\r\n                        <Icon name=\"add\" class=\"btn-icon\" />Add Option\r\n                    </button>\r\n                </div>\r\n            {/if}\r\n            {#if option.type === ApplicationCommandOptionType.CHANNEL}\r\n                <Select\r\n                    label=\"Channel Type\"\r\n                    options={channelTypes}\r\n                    selectionMode=\"multiple\"\r\n                    on:selectionChanged={handleChannelTypeSelectionChanged}\r\n                />\r\n            {/if}\r\n            {#if option.type === ApplicationCommandOptionType.NUMBER || option.type === ApplicationCommandOptionType.INTEGER}\r\n                <Textbox\r\n                    label=\"Max Value\"\r\n                    input_type={option.type ===\r\n                    ApplicationCommandOptionType.NUMBER\r\n                        ? \"integer\"\r\n                        : \"float\"}\r\n                    bind:value={option.max_value}\r\n                />\r\n                <Textbox\r\n                    label=\"Min Value\"\r\n                    input_type={option.type ===\r\n                    ApplicationCommandOptionType.NUMBER\r\n                        ? \"integer\"\r\n                        : \"float\"}\r\n                    bind:value={option.min_value}\r\n                />\r\n            {/if}\r\n            {#if option.type === ApplicationCommandOptionType.NUMBER || option.type === ApplicationCommandOptionType.INTEGER || option.type === ApplicationCommandOptionType.STRING}\r\n                <Checkbox\r\n                    label=\"Autocomplete\"\r\n                    bind:value={option.autocomplete}\r\n                />\r\n                {#if option.choices}\r\n                    <div class=\"option-choice-list\">\r\n                        {#each option.choices as choice, i}\r\n                            <CommandOptionChoice\r\n                                bind:choice\r\n                                bind:optionType={option.type}\r\n                                on:remove={() => {\r\n                                    option.choices.splice(i, 1);\r\n                                    option.choices = option.choices;\r\n                                }}\r\n                            />\r\n                        {/each}\r\n                    </div>\r\n                {/if}\r\n                <div class=\"button-bar\">\r\n                    <button on:click={addOptionChoice}>\r\n                        <Icon name=\"add\" class=\"btn-icon\" />Add Option Choice\r\n                    </button>\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    </Collapsible>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .command-option-container {\r\n        box-shadow: 0px 0px 5px 0px var(--box-shadow);\r\n        border-radius: 0.5em;\r\n        margin-bottom: 1em;\r\n\r\n        .container-header {\r\n            width: 100%;\r\n        }\r\n        .content {\r\n            padding: 1em;\r\n        }\r\n    }\r\n\r\n    .option-choice-list {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        margin: 1em 0;\r\n        gap: 1em;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import Highlight from \"svelte-highlight\";\r\n    import json from \"svelte-highlight/languages/json\";\r\n    import atomOneDark from \"svelte-highlight/styles/atom-one-dark\";\r\n    import {\r\n        ApplicationCommand,\r\n        ApplicationCommandType,\r\n        build_permissions,\r\n        Permission,\r\n    } from \"../models/app_command\";\r\n    import { buildOptionsFromEnum } from \"../util/enum_util\";\r\n    import Checkbox from \"./base/Checkbox.svelte\";\r\n    import Collapsible from \"./base/Collapsible.svelte\";\r\n    import Select from \"./base/Select.svelte\";\r\n    import Textbox from \"./base/Textbox.svelte\";\r\n    import CommandOption from \"./CommandOption.svelte\";\r\n    import Icon from \"./Icon.svelte\";\r\n    import Localization from \"./Localization.svelte\";\r\n\r\n    export let command: Partial<ApplicationCommand>;\r\n    $: command_json = JSON.stringify(command, null, 4);\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    function addOption() {\r\n        if (!command.options) {\r\n            command.options = [];\r\n        }\r\n        command.options = [...command.options, { name: \"\", description: \"\" }];\r\n    }\r\n\r\n    function copyJSONToClipboard() {\r\n        navigator.clipboard.writeText(command_json);\r\n    }\r\n\r\n    let commandTypes = buildOptionsFromEnum(ApplicationCommandType);\r\n\r\n    let defaultCommandType = 0;\r\n    $: command.type = commandTypes[defaultCommandType].value;\r\n\r\n    let permissions = buildOptionsFromEnum(Permission);\r\n\r\n    function setPermissions(permissions) {\r\n        command.default_member_permissions = build_permissions(\r\n            permissions.map((p) => p.value)\r\n        );\r\n    }\r\n</script>\r\n\r\n<svelte:head>\r\n    {@html atomOneDark}\r\n</svelte:head>\r\n\r\n<div class=\"command-container\">\r\n    <Collapsible>\r\n        <div class=\"container-header\" slot=\"header\">\r\n            <h2 class=\"heading\">Command</h2>\r\n            <div\r\n                class=\"delete-icon-wrapper\"\r\n                on:click={() => dispatch(\"remove\")}\r\n            >\r\n                <Icon name=\"delete\" class=\"delete-icon\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"content\" slot=\"content\">\r\n            <Textbox label=\"GuildID\" bind:value={command.guild_id} />\r\n            <Textbox label=\"Name\" bind:value={command.name} maxlength={32} />\r\n            <Localization bind:localizations={command.name_localizations} />\r\n            <Textbox\r\n                label=\"Description\"\r\n                bind:value={command.description}\r\n                maxlength={100}\r\n            />\r\n            <Localization\r\n                bind:localizations={command.description_localizations}\r\n            />\r\n            <Select\r\n                label=\"Type\"\r\n                options={commandTypes}\r\n                bind:currentIndex={defaultCommandType}\r\n            />\r\n            <Select\r\n                label=\"Permissions\"\r\n                options={permissions}\r\n                selectionMode=\"multiple\"\r\n                on:selectionChanged={(event) =>\r\n                    setPermissions(event.detail.values)}\r\n            />\r\n            {#if !command.guild_id}\r\n                <Checkbox\r\n                    label=\"DM Permission\"\r\n                    bind:value={command.dm_permission}\r\n                />\r\n            {/if}\r\n            <div class=\"command-options\">\r\n                {#if command.options}\r\n                    {#each command.options as option, i}\r\n                        <CommandOption\r\n                            bind:option\r\n                            on:remove={() => {\r\n                                command.options.splice(i, 1);\r\n                                command.options = option.options;\r\n                            }}\r\n                        />\r\n                    {/each}\r\n                {/if}\r\n            </div>\r\n            <div class=\"button-bar\">\r\n                <button on:click={addOption}>\r\n                    <Icon name=\"add\" class=\"btn-icon\" />Add Option\r\n                </button>\r\n            </div>\r\n            <div class=\"output-json-container\">\r\n                <Highlight language={json} code={command_json} />\r\n                <button class=\"copy-button\" on:click={copyJSONToClipboard}>\r\n                    <Icon name=\"copy\" class=\"btn-icon\" />Copy\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </Collapsible>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .command-container {\r\n        box-shadow: 0px 0px 10px 3px var(--box-shadow);\r\n        border-radius: 0.5em;\r\n        margin-bottom: 1em;\r\n\r\n        .container-header {\r\n            width: 100%;\r\n        }\r\n\r\n        .content {\r\n            padding: 1em;\r\n        }\r\n    }\r\n\r\n    .command-options {\r\n        margin: 1em 0;\r\n    }\r\n\r\n    .output-json-container {\r\n        position: relative;\r\n    }\r\n\r\n    .copy-button {\r\n        position: absolute;\r\n        top: 1em;\r\n        right: 1em;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import type { ApplicationCommand } from \"../models/app_command\";\r\n    import Command from \"./Command.svelte\";\r\n    import Icon from \"./Icon.svelte\";\r\n\r\n    let commands: Partial<ApplicationCommand>[] = [];\r\n\r\n    function createCommand() {\r\n        commands = [...commands, { name: \"\", description: \"\" }];\r\n    }\r\n\r\n    function removeCommand(index: number) {\r\n        commands.splice(index, 1);\r\n        commands = commands;\r\n    }\r\n</script>\r\n\r\n<div class=\"command-list-container\">\r\n    <div class=\"command-list\">\r\n        {#each commands as command, i}\r\n            <Command bind:command on:remove={() => removeCommand(i)} />\r\n        {/each}\r\n    </div>\r\n    <div class=\"button-bar\">\r\n        <button on:click={createCommand}>\r\n            <Icon name=\"add\" class=\"btn-icon\" />\r\n            Add Command\r\n        </button>\r\n    </div>\r\n</div>\r\n","<script lang=\"ts\">\n\timport CommandList from \"./components/CommandList.svelte\";\n</script>\n\n<main>\n\t<h1>Slash Command Builder</h1>\n\t<CommandList />\n</main>\n\n<style lang=\"scss\">\n</style>\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","t","innerHTML","Array","from","childNodes","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","callbacks","$$","bubbles","createEvent","initCustomEvent","custom_event","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","callback","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","deepFreezeEs6","exports","deepFreeze","freeze","getOwnPropertyNames","prop","isFrozen","default","deepFreeze$1","Response","mode","isMatchIgnored","ignoreMatch","escapeHTML","replace","inherit$1","original","objects","emitsWrappingTags","kind","HTMLRenderer","parseTree","buffer","classPrefix","walk","addText","openNode","scope","sublanguage","prefix","includes","pieces","split","shift","x","repeat","join","expandScopeName","span","closeNode","className","TokenTree","rootNode","stack","top","closeAllNodes","toJSON","JSON","stringify","builder","_walk","static","child","every","el","_collapse","TokenTreeEmitter","super","addKeyword","addSublanguage","emitter","toHTML","finalize","source","re","lookahead","concat","anyNumberOfTimes","optional","args","either","opts","stripOptionsFromArgs","capture","countMatchGroups","RegExp","toString","exec","BACKREF_RE","_rewriteBackreferences","regexps","joinWith","numCaptures","regex","offset","out","match","substring","String","Number","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","BACKSLASH_ESCAPE","begin","relevance","APOS_STRING_MODE","end","illegal","contains","QUOTE_STRING_MODE","COMMENT","modeOptions","excludeBegin","ENGLISH_WORD","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","MODES","MATCH_NOTHING_RE","RE_STARTERS_RE","SHEBANG","beginShebang","binary","resp","PHRASAL_WORDS_MODE","END_SAME_AS_BEGIN","_beginMatch","skipIfHasPrecedingDot","response","input","scopeClassName","_parent","beginKeywords","parent","__beforeBegin","keywords","compileIllegal","isArray","compileMatch","compileRelevance","beforeMatchExt","beforeMatch","starts","originalMode","endsParent","COMMON_KEYWORDS","compileKeywords","rawKeywords","caseInsensitive","scopeName","compiledKeywords","compileList","keywordList","toLowerCase","keyword","pair","scoreForKeyword","providedScore","commonKeyword","seenDeprecations","error","message","console","warn","log","deprecated","version","MultiClassError","remapScopeNames","regexes","scopeNames","emit","positions","_emit","_multi","MultiClass","beginScope","scopeSugar","_wrap","endScope","skip","returnBegin","beginMultiClass","excludeEnd","returnEnd","endMultiClass","compileLanguage","language","langRe","global","case_insensitive","unicodeRegex","MultiRegex","matchIndexes","matchAt","position","addRule","compile","terminators","matcherRe","lastIndex","s","findIndex","matchData","ResumableMultiRegex","rules","multiRegexes","count","regexIndex","getMatcher","matcher","resumingScanAtSamePosition","considerAll","m2","compilerExtensions","classNameAliases","compileMode","cmode","isCompiled","ext","keywordPattern","$pattern","keywordPatternRe","beginRe","endsWithParent","endRe","terminatorEnd","illegalRe","variants","cachedVariants","variant","dependencyOnParent","expandOrCloneMode","mm","term","rule","buildModeRegex","HTMLInjectionError","reason","escape","inherit","NO_MATCH","Symbol","highlight","hljs","languages","aliases","plugins","SAFE_MODE","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","ignoreUnescapedHTML","throwUnescapedHTML","noHighlightRe","languageDetectRe","cssSelector","__emitter","shouldNotHighlight","languageName","test","codeOrLanguageName","optionsOrCode","ignoreIllegals","code","fire","_highlight","codeToHighlight","continuation","keywordHits","processKeywords","modeBuffer","buf","word","matchText","keywordRelevance","startsWith","cssClass","substr","processBuffer","subLanguage","continuations","highlightAuto","_emitter","processSubLanguage","emitMultiClass","klass","startNewMode","endOfMode","matchPlusRemainder","matched","lexeme","doIgnore","resumeScanAtSamePosition","doEndMatch","endMode","origin","lastMatch","processLexeme","textBeforeMatch","err","badRule","newMode","beforeCallbacks","cb","doBeginMatch","processed","getLanguage","md","list","current","unshift","item","processContinuations","processedCount","_top","_illegalBy","resultSoFar","errorRaised","languageSubset","plaintext","justTextHighlightResult","results","autoDetection","sorted","sort","supersetOf","best","secondBest","highlightElement","classes","find","_class","blockLanguage","textContent","currentLang","resultLang","updateClassName","wantsHighlight","highlightAll","readyState","querySelectorAll","registerAliases","aliasList","alias","lang","plugin","window","highlightBlock","configure","userOptions","initHighlighting","initHighlightingOnLoad","registerLanguage","languageDefinition","error$1","rawDefinition","unregisterLanguage","listLanguages","addPlugin","upgradePluginAPI","debugMode","safeMode","versionString","HLJS","core","HighlightJS","create_if_block","pre_data_language_value","pre","code_1","levels","updates","to_null_out","accounted_for","register","langtag","dispatch","highlighted","$$invalidate","json$1","LITERALS","ApplicationCommandOptionType","ChannelType","Locale","ApplicationCommandType","Permission","buildOptionsFromEnum","enumType","entries","entry","display","str","toUpperCase","div","label_1","label","checked","raw_value","svg","i_class_value","class","icons","icon","get","div1","div0","collapsed","t0_value","t0","if_block0","create_if_block_1","defaultText","selectElement","optionsElements","currentIndex","selectionMode","currentIndices","formattedText","opened","handleSelection","values","_val","idx","_arr","newValue","$$value","if_block","input_value_value","html_input_type","input_type","maxlength","val","parseInt","parseFloat","textbox0_props","textbox1_props","div2","h4","textbox0_changes","textbox1_changes","choice","optionType","STRING","INTEGER","NUMBER","$$self","each_blocks","func","select_changes","textbox_changes","button","localizations","locales","locale_keys","commandType","selectionChanged","locale","fromEntries","deleteLocale","_","h3","create_if_block_5","each_value_1","max_value","min_value","autocomplete","checkbox_props","choices","checkbox_changes","each_value","commandoptionchoice_props","commandoptionchoice_changes","name_localizations","localization0_props","description","description_localizations","localization1_props","required","SUB_COMMAND","SUB_COMMAND_GROUP","create_if_block_4","if_block1","CHANNEL","create_if_block_3","if_block2","create_if_block_2","localization0_changes","localization1_changes","option","commandOptionTypes","channelTypes","defaultOptionType","opt","channel_types","h2","dm_permission","guild_id","textbox2_props","json","div3","button0","button1","textbox2_changes","head","command","commandTypes","defaultCommandType","permissions","setPermissions","default_member_permissions","permission","build_permissions","command_json","navigator","clipboard","writeText","commands","removeCommand","main","h1","body"],"mappings":"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"}